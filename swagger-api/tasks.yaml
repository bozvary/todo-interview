openapi: 3.0.0
info:
  title: Task API
  version: 1.0.0
paths:
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Task name
                  example: "New Task"
                description:
                  type: string
                  description: Task description
                  example: "Task Description"
                status:
                  type: string
                  description: Task status
                  example: "to-do"
                startDate:
                  type: string
                  format: date
                  description: Task start date
                  example: "2024-09-22"
                dueDate:
                  type: string
                  format: date
                  description: Task due date
                  example: "2024-09-23"
      responses:
        201:
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The task ID
                  name:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                  startDate:
                    type: string
                    format: date
                  dueDate:
                    type: string
                    format: date
    get:
      tags:
        - Tasks
      summary: Fetch all tasks
      responses:
        '200':
          description: A list of tasks
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The task ID
                name:
                  type: string
                  description: The name of the task
                description:
                  type: string
                  description: The description of the task
                status:
                  type: string
                  description: The current status of the task (to-do, done)
                startDate:
                  type: string
                  format: date
                  description: The start date of the task
                dueDate:
                  type: string
                  format: date
                  description: The due date of the task
                doneDate:
                  type: string
                  format: date
                  description: The date when the task was marked as done
        '500':
          description: Server error
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error message
  /tasks/{id}/status:
    patch:
      tags:
        - Tasks
      summary: Update task status
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the task to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: New status of the task
                  enum: [to-do, done]
                  example: "done"
      responses:
        200:
          description: Task status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Task status updated"
        400:
          description: Invalid status or task ID
        404:
          description: Task not found
  /tasks/{id}:
    delete:
      tags:
        - Tasks
      summary: Delete a task by ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: The ID of the task to delete (must be a 24-character hex string)
      responses:
        '200':
          description: Task deleted
          schema:
            type: object
            properties:
              message:
                type: string
                description: Confirmation message
        '404':
          description: Task not found
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error message indicating the task was not found
        '500':
          description: Server error
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error message